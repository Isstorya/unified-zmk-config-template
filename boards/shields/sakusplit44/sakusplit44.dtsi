/* SPDX-License-Identifier: MIT */
#include <dt-bindings/zmk/matrix-transform.h>

/ {
    chosen {
        /* говорим ZMK, какой kscan и transform использовать */
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    /* Трансформ для 3x7 — подгони под свою физику */
    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        rows = <3>;
        columns = <7>;
        map = <
            /* R0C0..R0C6 */
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)
            /* R1C0..R1C6 */
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)
            /* R2C0..R2C6 */
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6)
        >;
    };

    /* ОПРЕДЕЛИМ ЭНКОДЕРЫ (левый/правый) и общий список sensors */
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        /* замени PIN_A_L/PIN_B_L на реальные пины левой половины */
        a-gpios = <&gpio0 PIN_A_L (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 PIN_B_L (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled"; /* включим в left.overlay */
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        /* замени PIN_A_R/PIN_B_R на реальные пины правой половины */
        a-gpios = <&gpio0 PIN_A_R (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 PIN_B_R (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled"; /* включим в right.overlay */
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        /* сколько триггеров на оборот для sensor-bindings по умолчанию */
        triggers-per-rotation = <20>;
    };
};
